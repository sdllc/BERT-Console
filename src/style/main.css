
*, *:before, *:after {
  box-sizing: inherit;
}

html {
  box-sizing: border-box;
  height: 100%;
  font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
  font-size: 10pt;
}

body {
  height: 100%;
  width: 100%;
  margin: 0;
  overflow: hidden;
}

/* --- slight modification to the defaults ------------------------------ */

.CodeMirror, .fixed-width { 
	font-family: consolas;
	font-size: 14.25px;
  height: 100%;
}

.CodeMirror-gutters {
  background: #fff;
  border-right-color: #fff;
}

.CodeMirror-linenumbers {
  margin-right: 1.1em;
  margin-left: .5em;
}

.CodeMirror-linenumber {
  color: #57a7bf;
}

.cm-s-default span.shell-parse-error { color: #ff4f3f !important;  }
.cm-s-default span.pager { color: #000 !important; }
.cm-s-default span.shell-piped-stream { color: #000 !important; }
.cm-s-default span.shell-prompt-debug { color: red; }

.cm-s-default .CodeMirror-matchingbracket { outline:1px solid #ccc; background: #ddd; color:black !important; }

.CodeMirror-hints {
	letter-spacing: .25px;
	font-family: consolas;
	font-size: 11px;
}


/* --- function tips ---------------------------------------------------- */

.cmjs-shell-function-tip-container {
	position: absolute;
	z-index: 15;
	overflow: visible;
	opacity: 0;
	transition: opacity .1s;
}

.cmjs-shell-function-tip {
	position: relative;
	transform: translateY(-100%);
	bottom: .5em;
	left: -1em;
	border: 1px solid #ccc;
	background: rgba( 255, 255, 200, .9 );
	padding: 2px;
	border-radius: 2px;
	box-shadow: 2px 3px 5px rgba(0,0,0,.2);
}

.cmjs-shell-function-tip-container.visible {
	opacity: 1;
}

/* --- fix: who's unsetting this? (probably me...) ---------------------- */

.checkbox input[type="checkbox"]:checked + label::after, .checkbox input[type="radio"]:checked + label::after {
  font-size: 1em;
  left: -1px;
  top: 1px;
}

/* --- chooser ---------------------------------------------------------- */

.chooser-radio, .chooser-checkbox {
  padding-left: 0em;
  cursor: default;
  display: flex;
}

.chooser-radio::before {
  padding: .22em .5em;
  overflow: hidden;
  max-width: 2em;
  width: 2em;
  font-family: 'Material Icons';
  content: "radio_button_unchecked";
  color: #333;
  font-size: 1.2em;
  position: relative;
}

.chooser-radio.chooser-radio-checked::before {
  content: "radio_button_checked";
}

.chooser-checkbox::before {
  overflow: hidden;
  font-family: 'Material Icons';
  content: "check";
  color: rgba( 0,0,0,0);
  margin-right: .6em;
  font-size: 1.2em;
}

.chooser-checkbox.chooser-checkbox-checked::before {
  color: #333;
}

/* --- mirror chooser---------------------------------------------------- */

.mirror-chooser-name {
  font-size: 1.2em;
}

.mirror-chooser-host {
  color: #666;
}

.mirror-chooser-entry {
  padding: .5em 1em;
  display: block;
}

.vlist-list-entry:nth-child(even) .mirror-chooser-entry {
  background: #eee;
}

/* --- package chooser--------------------------------------------------- */

.package-chooser-name {
}

.package-chooser-entry {
  padding: .75em 1em;
}

.vlist-list-entry:nth-child(even) .package-chooser-entry {
  background: #eee;
}

.package-chooser-entry .chooser-checkbox.disabled {
  color: #999;
}

.package-chooser-entry .chooser-checkbox.disabled::before {
  color: inherit;
}


